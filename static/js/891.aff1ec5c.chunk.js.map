{"version":3,"file":"static/js/891.aff1ec5c.chunk.js","mappings":"iOAEaA,EAAmBC,EAAAA,GAAAA,QAAH,6F,UCAhBC,EAAeD,EAAAA,GAAAA,KAAH,uKAUZE,EAAkBF,EAAAA,GAAAA,OAAH,2L,mBCRb,SAASG,IACtB,IAAcC,GAAYC,EAAAA,EAAAA,MAAlBC,KACR,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEA,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAAC,GACxB,OAAQA,EAAEC,OAAON,MACf,IAAK,OACH,OAAOC,EAAQI,EAAEC,OAAOC,OAC1B,IAAK,SACH,OAAOJ,EAAUE,EAAEC,OAAOC,OAC5B,QACE,MAAM,IAAIC,QAcVC,EAAwB,SAACC,GAC7BhB,EAASiB,MAAK,SAAAC,GAAW,OACrBA,EAAYZ,KAAKa,sBAAwBb,EAAKa,uBAC9CC,MAAM,GAAD,OAAId,EAAJ,4BACLF,EAAWY,IAGXK,EAAY,WAChBd,EAAQ,IACRE,EAAU,KAGV,OACE,UAACZ,EAAD,CAAcyB,SAvBQ,SAAAX,GACxBA,EAAEY,iBAKFR,EAJgB,CACdT,KAAAA,EACAE,OAAAA,IAGFa,KAgBE,WACE,qCAEE,kBACEG,KAAK,OACLlB,KAAK,OACLO,MAAOP,EACPmB,SAAUf,EACVgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,kBACEJ,KAAK,MACLlB,KAAK,SACLO,MAAOL,EACPiB,SAAUf,EACVgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAAC9B,EAAD,CAAiB0B,KAAK,SAAtB,4BCpER,I,IAcA,EAde,SAAC,GAAyB,IAAvBX,EAAsB,EAAtBA,MAAOY,EAAe,EAAfA,SACvB,OAAS,sDAEP,kBACED,KAAK,OACLlB,KAAK,SACLO,MAAOA,EACPY,SAAUA,EACVC,QAAQ,yHACRC,MAAM,+I,mBCTCE,EAAkBjC,EAAAA,GAAAA,OAAH,oKASfkC,EAAmBlC,EAAAA,GAAAA,GAAH,qK,oBCsB7B,EA3BoB,SAAC,GAAc,IAAbmC,EAAY,EAAZA,OACpB,GACI9B,EAAAA,EAAAA,MADUD,EAAd,EAAQE,KAAgB8B,EAAxB,EAAwBA,gBAAiBC,EAAzC,EAAyCA,WAAYC,EAArD,EAAqDA,QAASC,EAA9D,EAA8DA,QAExDC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,eAK/B,OAAiDC,EAAAA,EAAAA,MAAjD,eAAOC,EAAP,KAAkCC,EAAlC,KAAuBC,UAEjBC,EAAe3C,IAAaiC,IAAeE,GAAWC,GAAcF,EAIxE,OAAQ,iCACR,mBAAQU,QAASV,EAASW,SAAUb,EAApC,uBACCW,GAVM3C,EAAS+B,QAAO,SAAAf,GAAO,OAAIA,EAAQV,KAAKwC,cAAcC,SAAShB,EAAOe,kBAUpCE,KAAI,SAAAhC,GAAO,OACpD,UAACc,EAAD,WACGd,EAAQV,KADX,KACmBU,EAAQR,QACzB,SAACqB,EAAD,CAAiBgB,SAAUb,EAC3BY,QAAS,kBAAMJ,EAAcxB,EAAQiC,KADrC,SAEER,EAAa,cAAgB,aAJVzB,EAAQiC,WCdnC,EANoB,SAAC,GAAD,IAAElB,EAAF,EAAEA,OAAF,OAClB,yBACE,SAAC,EAAD,CAAaA,OAAQA,OCCV,SAASmB,IACtB,OAA4B7C,EAAAA,EAAAA,UAAS,IAArC,eAAO0B,EAAP,KAAeoB,EAAf,KAGE,OACE,UAACxD,EAAD,YACE,uCACA,SAACI,EAAD,KACA,sCACA,SAAC,EAAD,CAAQc,MAAOkB,EAAQN,SAPH,SAAAd,GAAMwC,EAAUxC,EAAEC,OAAOC,WAQ7C,SAAC,EAAD,CAAakB,OAAQA,ODL7BqB,EAAAA,UAAwB,CACtBrB,OAAQsB,IAAAA,OAAAA,a,iCEHV,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAItD,MACZ,mLAKF,MADAsD,EAAI9D,KAAO,sBACL8D,GAGR,SAASC,IACP,OAAOR,EAFTA,EAAKS,WAAaT,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACNrD,OAAQqD,EACRe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EAERkB,IAAKlB,EACLmB,QAASX,EACTY,QAASpB,EACTqB,YAAarB,EACbsB,WAAYd,EACZe,KAAMvB,EACNwB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBjC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAelB,UAAYkB,EAEpBA,I,qBC9CPZ,EAAOC,QAAUL,EAAQ,IAARA,I,8BCNnBI,EAAOC,QAFoB","sources":["views/ContactsView/ContactsView.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactsFilter/ContactFilter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","views/ContactsView/ContactsView.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ArticleConteiner = styled.article`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  margin-bottom: 10px;\n\n  border: 1px solid black;\n  padding: 20px;\n`;\n\nexport const ContactsFormBtn = styled.button`\n  background-color: white;\n  text-align: center;\n  border: 4px solid blue;\n  border-radius: 10px;\n  font-size: 18px;\n  margin-top: 20px;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { ContactsForm, ContactsFormBtn } from './ContactForm.styled';\nimport { useGetContactsQuery, useCreateContactsMutation } from '../../redux/contactsAPI';\n\nexport default function ContactForm () {\n  const { data: contacts} = useGetContactsQuery();\n  const [addContact] = useCreateContactsMutation();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handlerChangeName = e => {\n    switch (e.target.name){\n      case \"name\":\n        return setName(e.target.value)\n      case \"number\":\n        return setNumber(e.target.value)\n      default:\n        throw new Error();\n    }\n  }\n\n  const handlerSubmitUser = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n    handlerSubmitUserForm(contact)\n    resetName();\n  };\n\n  const handlerSubmitUserForm = (contact) => {\n    contacts.some(contactItem =>\n        contactItem.name.toLocaleLowerCase() === name.toLocaleLowerCase())\n      ? alert(`${name} is already in contacts`)\n      : addContact(contact);\n  };\n\n  const resetName = () => {\n    setName(\"\");\n    setNumber('');\n  };\n\n    return (\n      <ContactsForm onSubmit={handlerSubmitUser}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handlerChangeName}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handlerChangeName}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <ContactsFormBtn type=\"submit\">Add contact</ContactsFormBtn>\n      </ContactsForm>\n    );\n}\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return  (<label>\n    Find contacts by name\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      onChange={onChange}\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    />\n  </label>)\n  }\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactsListBtn = styled.button`\n  background-color: white;\n  border: 2px solid red;\n  border-radius: 10px;\n  font-size: 14px;\n  margin-left: 20px;\n  cursor: pointer;\n`;\n\nexport const ContactsListItem = styled.li`\n  border: 1px solid blue;\n  border-radius: 4px;\n  font-size: 14px;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n  padding: 5px;\n`;\n","import { ContactsListBtn, ContactsListItem } from './ContactList.styled';\nimport { useGetContactsQuery, useDeleteContactsMutation } from '../../redux/contactsAPI';\nimport PropTypes from 'prop-types';\nimport authSelectors from 'redux/authUser/authUserSelector';\nimport { useSelector } from 'react-redux';\n\nconst ContactItem = ({filter}) => {\n  const { data: contacts, isUninitialized, isFetching, refetch, isError\n  } = useGetContactsQuery();\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  function filterVisibleContacts () {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))}\n\n  const [deleteContact, {isLoading: isDeleting}] = useDeleteContactsMutation();\n\n  const showContacts = contacts && !isFetching && !isError && isLoggedIn && refetch;\n\n  // useEffect(() => {dispatch(contactsOperations.fetchContacts());}, [dispatch]);\n\n    return (<>\n    <button onClick={refetch} disabled={isUninitialized}> REFETCH </button>\n    {showContacts && filterVisibleContacts().map(contact => (\n    <ContactsListItem key={contact.id}>\n      {contact.name}: {contact.number}\n      <ContactsListBtn disabled={isUninitialized}\n      onClick={() => deleteContact(contact.id)}\n      >{isDeleting ? \"deleting...\" : \"Delete\"}\n      </ContactsListBtn>\n    </ContactsListItem>\n  ))}\n    </>)}\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\n\nconst ContactList = ({filter}) => (\n  <ol>\n    <ContactItem filter={filter} />\n  </ol>\n);\n\nexport default ContactList;\n\nContactItem.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n","import { ArticleConteiner } from './ContactsView.styled';\nimport ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/ContactsFilter';\nimport ContactList from '../../components/ContactList';\nimport { useState } from 'react';\n\nexport default function ContactsView () {\n  const [filter, setFilter] = useState(\"\");\n  const handlerFilterName = e => {setFilter(e.target.value)};\n\n    return (\n      <ArticleConteiner>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={handlerFilterName} />\n        <ContactList filter={filter} />\n      </ArticleConteiner>\n    );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ArticleConteiner","styled","ContactsForm","ContactsFormBtn","ContactForm","contacts","useGetContactsQuery","data","useCreateContactsMutation","addContact","useState","name","setName","number","setNumber","handlerChangeName","e","target","value","Error","handlerSubmitUserForm","contact","some","contactItem","toLocaleLowerCase","alert","resetName","onSubmit","preventDefault","type","onChange","pattern","title","required","ContactsListBtn","ContactsListItem","filter","isUninitialized","isFetching","refetch","isError","isLoggedIn","useSelector","authSelectors","useDeleteContactsMutation","deleteContact","isDeleting","isLoading","showContacts","onClick","disabled","toLowerCase","includes","map","id","ContactsView","setFilter","ContactItem","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}