{"version":3,"file":"static/js/839.9559b1f1.chunk.js","mappings":"+PAEaA,EAAqBC,EAAAA,GAAAA,KAAH,qLASlBC,EAAsBD,EAAAA,GAAAA,MAAH,oHAOnBE,EAAsBF,EAAAA,GAAAA,MAAH,8J,SCZjB,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAWN,OACE,4BACE,wCAEA,UAACf,EAAD,CAAoBgB,SAXH,SAAAC,GACnBA,EAAEC,iBACFb,EAASc,EAAAA,EAAAA,MAAiB,CAAEX,MAAAA,EAAOE,SAAAA,KACnCD,EAAS,IACTE,EAAY,KAOkCS,aAAa,MAAzD,WACE,UAAClB,EAAD,qBAEE,SAACC,EAAD,CACEkB,KAAK,QACLP,KAAK,QACLC,MAAOP,EACPc,SAAUV,QAId,UAACV,EAAD,uBAEE,SAACC,EAAD,CACEkB,KAAK,WACLP,KAAK,WACLC,MAAOL,EACPY,SAAUV,QAId,mBAAQS,KAAK,SAAb","sources":["views/LoginUserView/LoginUserView.styled.js","views/LoginUserView/LoginUserView.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormUserViewStyled = styled.form`\n  max-width: 620;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  /* min-height: calc(100vh - 50px); */\n`;\n\nexport const LabelUserViewStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15;\n  /* max-width: 420; */\n`;\n\nexport const InputUserViewStyled = styled.input`\n display: block;\n    padding: 5px;\n    border: 2px solid black;\n    border-radius: 6px;\n    width: 100%;\n    margin-bottom: 15;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport  operations from '../../redux/authUser/authUserAsyncThunk';\nimport { FormUserViewStyled, LabelUserViewStyled, InputUserViewStyled} from \"./LoginUserView.styled\";\n\n\nexport default function LoginUserView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(operations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>User Login</h1>\n\n      <FormUserViewStyled onSubmit={handleSubmit} autoComplete=\"off\">\n        <LabelUserViewStyled >\n          E-mail\n          <InputUserViewStyled\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </LabelUserViewStyled>\n\n        <LabelUserViewStyled >\n          Password\n          <InputUserViewStyled\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </LabelUserViewStyled>\n\n        <button type=\"submit\">Log-in</button>\n      </FormUserViewStyled>\n    </div>\n  );\n}\n"],"names":["FormUserViewStyled","styled","LabelUserViewStyled","InputUserViewStyled","LoginUserView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","e","preventDefault","operations","autoComplete","type","onChange"],"sourceRoot":""}